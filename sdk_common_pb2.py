# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sdk_common.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sdk_common.proto',
  package='srlinux.sdk',
  syntax='proto3',
  serialized_options=b'Z\034nokia.com/srlinux/sdk/protos',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10sdk_common.proto\x12\x0bsrlinux.sdk\"\x1b\n\x0bIpAddressPb\x12\x0c\n\x04\x61\x64\x64r\x18\x01 \x01(\x0c\"S\n\x0fIpAddrPrefLenPb\x12)\n\x07ip_addr\x18\x01 \x01(\x0b\x32\x18.srlinux.sdk.IpAddressPb\x12\x15\n\rprefix_length\x18\x02 \x01(\r\"s\n\x17IpInterfaceAddrPrefixPb\x12,\n\x06prefix\x18\x01 \x01(\x0b\x32\x1c.srlinux.sdk.IpAddrPrefLenPb\x12*\n\x05state\x18\x02 \x01(\x0e\x32\x1b.srlinux.sdk.IpAddressState\"#\n\x0cMacAddressPb\x12\x13\n\x0bmac_address\x18\x01 \x01(\x0c\"\"\n\nGlobalIfId\x12\x14\n\x0cglobal_if_id\x18\x01 \x01(\r\"$\n\rNetInstanceId\x12\x13\n\x0binstance_id\x18\x01 \x01(\r\"\x1b\n\x08PortIdPb\x12\x0f\n\x07port_id\x18\x01 \x01(\x04\"\x1f\n\tMplsLabel\x12\x12\n\nmpls_label\x18\x01 \x01(\r\"\x0c\n\nAgentReply\"\r\n\x0bSyncRequest\"L\n\x0cSyncResponse\x12)\n\x06status\x18\x01 \x01(\x0e\x32\x19.srlinux.sdk.SdkMgrStatus\x12\x11\n\terror_str\x18\x02 \x01(\t*Z\n\x0bIfMgrIfType\x12\x0c\n\x08\x45THERNET\x10\x00\x12\x0c\n\x08LOOPBACK\x10\x01\x12\x0e\n\nMANAGEMENT\x10\x02\x12\r\n\tAGGREGATE\x10\x03\x12\x07\n\x03IRB\x10\x04\x12\x07\n\x03MAX\x10\x05*\xbb\x01\n\x0eIpAddressState\x12\x18\n\x14IPADDR_STATE_UNKNOWN\x10\x00\x12\x1a\n\x16IPADDR_STATE_TENTATIVE\x10\x01\x12\x1b\n\x17IPADDR_STATE_DUPLICATED\x10\x02\x12\x1d\n\x19IPADDR_STATE_INACCESSIBLE\x10\x03\x12\x1b\n\x17IPADDR_STATE_DEPRECATED\x10\x04\x12\x1a\n\x16IPADDR_STATE_PREFERRED\x10\x05*\xd3\x01\n\x0fIfOperStateType\x12\x14\n\x10IF_OPER_STATE_UP\x10\x00\x12\x16\n\x12IF_OPER_STATE_DOWN\x10\x01\x12\x19\n\x15IF_OPER_STATE_TESTING\x10\x02\x12\x19\n\x15IF_OPER_STATE_UNKNOWN\x10\x03\x12\x19\n\x15IF_OPER_STATE_DORMANT\x10\x04\x12\x1d\n\x19IF_OPER_STATE_NOT_PRESENT\x10\x05\x12\"\n\x1eIF_OPER_STATE_LOWER_LAYER_DOWN\x10\x06*\x87\x04\n\x10IfOperDownReason\x12\x15\n\x11IF_OPER_DOWN_NONE\x10\x00\x12$\n IF_OPER_DOWN_PORT_ADMIN_DISABLED\x10\x01\x12#\n\x1fIF_OPER_DOWN_MDA_ADMIN_DISABLED\x10\x02\x12%\n!IF_OPER_DOWN_TRANS_ADMIN_DISABLED\x10\x03\x12 \n\x1cIF_OPER_DOWN_MDA_NOT_PRESENT\x10\x04\x12\"\n\x1eIF_OPER_DOWN_TRANS_NOT_PRESENT\x10\x05\x12\x19\n\x15IF_OPER_DOWN_PHY_INIT\x10\x06\x12\x19\n\x15IF_OPER_DOWN_LOOPBACK\x10\x07\x12!\n\x1dIF_OPER_DOWN_LOWER_LAYER_DOWN\x10\x08\x12\x1e\n\x1aIF_OPER_DOWN_MTU_RESOURCES\x10\t\x12\"\n\x1eIF_OPER_DOWN_UNSUPPORTED_SPEED\x10\n\x12&\n\"IF_OPER_DOWN_UNSUPPORTED_TRANS_FEC\x10\x0b\x12\x16\n\x12IF_OPER_DOWN_OTHER\x10\x0c\x12!\n\x1dIF_OPER_DOWN_PORT_NOT_PRESENT\x10\r\x12$\n IF_OPER_DOWN_FABRIC_AVAILABILITY\x10\x0e*\xe1\x02\n\x17IfEthernetPortSpeedType\x12\x1b\n\x17IF_ETH_PORT_SPEED_UNSET\x10\x00\x12\x19\n\x15IF_ETH_PORT_SPEED_10M\x10\x01\x12\x1a\n\x16IF_ETH_PORT_SPEED_100M\x10\x02\x12\x18\n\x14IF_ETH_PORT_SPEED_1G\x10\x03\x12\x19\n\x15IF_ETH_PORT_SPEED_10G\x10\x04\x12\x19\n\x15IF_ETH_PORT_SPEED_25G\x10\x05\x12\x19\n\x15IF_ETH_PORT_SPEED_40G\x10\x06\x12\x19\n\x15IF_ETH_PORT_SPEED_50G\x10\x07\x12\x1a\n\x16IF_ETH_PORT_SPEED_100G\x10\x08\x12\x1a\n\x16IF_ETH_PORT_SPEED_200G\x10\t\x12\x1a\n\x16IF_ETH_PORT_SPEED_400G\x10\n\x12\x18\n\x14IF_ETH_PORT_SPEED_1T\x10\x0b*y\n\x14IfTransceiverFecType\x12\x16\n\x12IF_TRANS_FEC_UNSET\x10\x00\x12\x19\n\x15IF_TRANS_FEC_DISABLED\x10\x01\x12\x16\n\x12IF_TRANS_FEC_RS528\x10\x02\x12\x16\n\x12IF_TRANS_FEC_RS544\x10\x03*5\n\x0fSdkMgrOperation\x12\n\n\x06\x43reate\x10\x00\x12\n\n\x06\x43hange\x10\x01\x12\n\n\x06\x44\x65lete\x10\x02*5\n\x0cSdkMgrStatus\x12\x12\n\x0ekSdkMgrSuccess\x10\x00\x12\x11\n\rkSdkMgrFailed\x10\x01\x42\x1eZ\x1cnokia.com/srlinux/sdk/protosb\x06proto3'
)

_IFMGRIFTYPE = _descriptor.EnumDescriptor(
  name='IfMgrIfType',
  full_name='srlinux.sdk.IfMgrIfType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ETHERNET', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LOOPBACK', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MANAGEMENT', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AGGREGATE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IRB', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MAX', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=544,
  serialized_end=634,
)
_sym_db.RegisterEnumDescriptor(_IFMGRIFTYPE)

IfMgrIfType = enum_type_wrapper.EnumTypeWrapper(_IFMGRIFTYPE)
_IPADDRESSSTATE = _descriptor.EnumDescriptor(
  name='IpAddressState',
  full_name='srlinux.sdk.IpAddressState',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IPADDR_STATE_UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IPADDR_STATE_TENTATIVE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IPADDR_STATE_DUPLICATED', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IPADDR_STATE_INACCESSIBLE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IPADDR_STATE_DEPRECATED', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IPADDR_STATE_PREFERRED', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=637,
  serialized_end=824,
)
_sym_db.RegisterEnumDescriptor(_IPADDRESSSTATE)

IpAddressState = enum_type_wrapper.EnumTypeWrapper(_IPADDRESSSTATE)
_IFOPERSTATETYPE = _descriptor.EnumDescriptor(
  name='IfOperStateType',
  full_name='srlinux.sdk.IfOperStateType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_STATE_UP', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_STATE_DOWN', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_STATE_TESTING', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_STATE_UNKNOWN', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_STATE_DORMANT', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_STATE_NOT_PRESENT', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_STATE_LOWER_LAYER_DOWN', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=827,
  serialized_end=1038,
)
_sym_db.RegisterEnumDescriptor(_IFOPERSTATETYPE)

IfOperStateType = enum_type_wrapper.EnumTypeWrapper(_IFOPERSTATETYPE)
_IFOPERDOWNREASON = _descriptor.EnumDescriptor(
  name='IfOperDownReason',
  full_name='srlinux.sdk.IfOperDownReason',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_PORT_ADMIN_DISABLED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_MDA_ADMIN_DISABLED', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_TRANS_ADMIN_DISABLED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_MDA_NOT_PRESENT', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_TRANS_NOT_PRESENT', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_PHY_INIT', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_LOOPBACK', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_LOWER_LAYER_DOWN', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_MTU_RESOURCES', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_UNSUPPORTED_SPEED', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_UNSUPPORTED_TRANS_FEC', index=11, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_OTHER', index=12, number=12,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_PORT_NOT_PRESENT', index=13, number=13,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_OPER_DOWN_FABRIC_AVAILABILITY', index=14, number=14,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1041,
  serialized_end=1560,
)
_sym_db.RegisterEnumDescriptor(_IFOPERDOWNREASON)

IfOperDownReason = enum_type_wrapper.EnumTypeWrapper(_IFOPERDOWNREASON)
_IFETHERNETPORTSPEEDTYPE = _descriptor.EnumDescriptor(
  name='IfEthernetPortSpeedType',
  full_name='srlinux.sdk.IfEthernetPortSpeedType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_UNSET', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_10M', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_100M', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_1G', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_10G', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_25G', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_40G', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_50G', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_100G', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_200G', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_400G', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_ETH_PORT_SPEED_1T', index=11, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1563,
  serialized_end=1916,
)
_sym_db.RegisterEnumDescriptor(_IFETHERNETPORTSPEEDTYPE)

IfEthernetPortSpeedType = enum_type_wrapper.EnumTypeWrapper(_IFETHERNETPORTSPEEDTYPE)
_IFTRANSCEIVERFECTYPE = _descriptor.EnumDescriptor(
  name='IfTransceiverFecType',
  full_name='srlinux.sdk.IfTransceiverFecType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IF_TRANS_FEC_UNSET', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_TRANS_FEC_DISABLED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_TRANS_FEC_RS528', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IF_TRANS_FEC_RS544', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1918,
  serialized_end=2039,
)
_sym_db.RegisterEnumDescriptor(_IFTRANSCEIVERFECTYPE)

IfTransceiverFecType = enum_type_wrapper.EnumTypeWrapper(_IFTRANSCEIVERFECTYPE)
_SDKMGROPERATION = _descriptor.EnumDescriptor(
  name='SdkMgrOperation',
  full_name='srlinux.sdk.SdkMgrOperation',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Create', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Change', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Delete', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2041,
  serialized_end=2094,
)
_sym_db.RegisterEnumDescriptor(_SDKMGROPERATION)

SdkMgrOperation = enum_type_wrapper.EnumTypeWrapper(_SDKMGROPERATION)
_SDKMGRSTATUS = _descriptor.EnumDescriptor(
  name='SdkMgrStatus',
  full_name='srlinux.sdk.SdkMgrStatus',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='kSdkMgrSuccess', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='kSdkMgrFailed', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2096,
  serialized_end=2149,
)
_sym_db.RegisterEnumDescriptor(_SDKMGRSTATUS)

SdkMgrStatus = enum_type_wrapper.EnumTypeWrapper(_SDKMGRSTATUS)
ETHERNET = 0
LOOPBACK = 1
MANAGEMENT = 2
AGGREGATE = 3
IRB = 4
MAX = 5
IPADDR_STATE_UNKNOWN = 0
IPADDR_STATE_TENTATIVE = 1
IPADDR_STATE_DUPLICATED = 2
IPADDR_STATE_INACCESSIBLE = 3
IPADDR_STATE_DEPRECATED = 4
IPADDR_STATE_PREFERRED = 5
IF_OPER_STATE_UP = 0
IF_OPER_STATE_DOWN = 1
IF_OPER_STATE_TESTING = 2
IF_OPER_STATE_UNKNOWN = 3
IF_OPER_STATE_DORMANT = 4
IF_OPER_STATE_NOT_PRESENT = 5
IF_OPER_STATE_LOWER_LAYER_DOWN = 6
IF_OPER_DOWN_NONE = 0
IF_OPER_DOWN_PORT_ADMIN_DISABLED = 1
IF_OPER_DOWN_MDA_ADMIN_DISABLED = 2
IF_OPER_DOWN_TRANS_ADMIN_DISABLED = 3
IF_OPER_DOWN_MDA_NOT_PRESENT = 4
IF_OPER_DOWN_TRANS_NOT_PRESENT = 5
IF_OPER_DOWN_PHY_INIT = 6
IF_OPER_DOWN_LOOPBACK = 7
IF_OPER_DOWN_LOWER_LAYER_DOWN = 8
IF_OPER_DOWN_MTU_RESOURCES = 9
IF_OPER_DOWN_UNSUPPORTED_SPEED = 10
IF_OPER_DOWN_UNSUPPORTED_TRANS_FEC = 11
IF_OPER_DOWN_OTHER = 12
IF_OPER_DOWN_PORT_NOT_PRESENT = 13
IF_OPER_DOWN_FABRIC_AVAILABILITY = 14
IF_ETH_PORT_SPEED_UNSET = 0
IF_ETH_PORT_SPEED_10M = 1
IF_ETH_PORT_SPEED_100M = 2
IF_ETH_PORT_SPEED_1G = 3
IF_ETH_PORT_SPEED_10G = 4
IF_ETH_PORT_SPEED_25G = 5
IF_ETH_PORT_SPEED_40G = 6
IF_ETH_PORT_SPEED_50G = 7
IF_ETH_PORT_SPEED_100G = 8
IF_ETH_PORT_SPEED_200G = 9
IF_ETH_PORT_SPEED_400G = 10
IF_ETH_PORT_SPEED_1T = 11
IF_TRANS_FEC_UNSET = 0
IF_TRANS_FEC_DISABLED = 1
IF_TRANS_FEC_RS528 = 2
IF_TRANS_FEC_RS544 = 3
Create = 0
Change = 1
Delete = 2
kSdkMgrSuccess = 0
kSdkMgrFailed = 1



_IPADDRESSPB = _descriptor.Descriptor(
  name='IpAddressPb',
  full_name='srlinux.sdk.IpAddressPb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='srlinux.sdk.IpAddressPb.addr', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=60,
)


_IPADDRPREFLENPB = _descriptor.Descriptor(
  name='IpAddrPrefLenPb',
  full_name='srlinux.sdk.IpAddrPrefLenPb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip_addr', full_name='srlinux.sdk.IpAddrPrefLenPb.ip_addr', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix_length', full_name='srlinux.sdk.IpAddrPrefLenPb.prefix_length', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=145,
)


_IPINTERFACEADDRPREFIXPB = _descriptor.Descriptor(
  name='IpInterfaceAddrPrefixPb',
  full_name='srlinux.sdk.IpInterfaceAddrPrefixPb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='prefix', full_name='srlinux.sdk.IpInterfaceAddrPrefixPb.prefix', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='state', full_name='srlinux.sdk.IpInterfaceAddrPrefixPb.state', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=147,
  serialized_end=262,
)


_MACADDRESSPB = _descriptor.Descriptor(
  name='MacAddressPb',
  full_name='srlinux.sdk.MacAddressPb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mac_address', full_name='srlinux.sdk.MacAddressPb.mac_address', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=264,
  serialized_end=299,
)


_GLOBALIFID = _descriptor.Descriptor(
  name='GlobalIfId',
  full_name='srlinux.sdk.GlobalIfId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='global_if_id', full_name='srlinux.sdk.GlobalIfId.global_if_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=301,
  serialized_end=335,
)


_NETINSTANCEID = _descriptor.Descriptor(
  name='NetInstanceId',
  full_name='srlinux.sdk.NetInstanceId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_id', full_name='srlinux.sdk.NetInstanceId.instance_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=337,
  serialized_end=373,
)


_PORTIDPB = _descriptor.Descriptor(
  name='PortIdPb',
  full_name='srlinux.sdk.PortIdPb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='port_id', full_name='srlinux.sdk.PortIdPb.port_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=375,
  serialized_end=402,
)


_MPLSLABEL = _descriptor.Descriptor(
  name='MplsLabel',
  full_name='srlinux.sdk.MplsLabel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mpls_label', full_name='srlinux.sdk.MplsLabel.mpls_label', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=404,
  serialized_end=435,
)


_AGENTREPLY = _descriptor.Descriptor(
  name='AgentReply',
  full_name='srlinux.sdk.AgentReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=437,
  serialized_end=449,
)


_SYNCREQUEST = _descriptor.Descriptor(
  name='SyncRequest',
  full_name='srlinux.sdk.SyncRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=451,
  serialized_end=464,
)


_SYNCRESPONSE = _descriptor.Descriptor(
  name='SyncResponse',
  full_name='srlinux.sdk.SyncResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='srlinux.sdk.SyncResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='error_str', full_name='srlinux.sdk.SyncResponse.error_str', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=466,
  serialized_end=542,
)

_IPADDRPREFLENPB.fields_by_name['ip_addr'].message_type = _IPADDRESSPB
_IPINTERFACEADDRPREFIXPB.fields_by_name['prefix'].message_type = _IPADDRPREFLENPB
_IPINTERFACEADDRPREFIXPB.fields_by_name['state'].enum_type = _IPADDRESSSTATE
_SYNCRESPONSE.fields_by_name['status'].enum_type = _SDKMGRSTATUS
DESCRIPTOR.message_types_by_name['IpAddressPb'] = _IPADDRESSPB
DESCRIPTOR.message_types_by_name['IpAddrPrefLenPb'] = _IPADDRPREFLENPB
DESCRIPTOR.message_types_by_name['IpInterfaceAddrPrefixPb'] = _IPINTERFACEADDRPREFIXPB
DESCRIPTOR.message_types_by_name['MacAddressPb'] = _MACADDRESSPB
DESCRIPTOR.message_types_by_name['GlobalIfId'] = _GLOBALIFID
DESCRIPTOR.message_types_by_name['NetInstanceId'] = _NETINSTANCEID
DESCRIPTOR.message_types_by_name['PortIdPb'] = _PORTIDPB
DESCRIPTOR.message_types_by_name['MplsLabel'] = _MPLSLABEL
DESCRIPTOR.message_types_by_name['AgentReply'] = _AGENTREPLY
DESCRIPTOR.message_types_by_name['SyncRequest'] = _SYNCREQUEST
DESCRIPTOR.message_types_by_name['SyncResponse'] = _SYNCRESPONSE
DESCRIPTOR.enum_types_by_name['IfMgrIfType'] = _IFMGRIFTYPE
DESCRIPTOR.enum_types_by_name['IpAddressState'] = _IPADDRESSSTATE
DESCRIPTOR.enum_types_by_name['IfOperStateType'] = _IFOPERSTATETYPE
DESCRIPTOR.enum_types_by_name['IfOperDownReason'] = _IFOPERDOWNREASON
DESCRIPTOR.enum_types_by_name['IfEthernetPortSpeedType'] = _IFETHERNETPORTSPEEDTYPE
DESCRIPTOR.enum_types_by_name['IfTransceiverFecType'] = _IFTRANSCEIVERFECTYPE
DESCRIPTOR.enum_types_by_name['SdkMgrOperation'] = _SDKMGROPERATION
DESCRIPTOR.enum_types_by_name['SdkMgrStatus'] = _SDKMGRSTATUS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

IpAddressPb = _reflection.GeneratedProtocolMessageType('IpAddressPb', (_message.Message,), {
  'DESCRIPTOR' : _IPADDRESSPB,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.IpAddressPb)
  })
_sym_db.RegisterMessage(IpAddressPb)

IpAddrPrefLenPb = _reflection.GeneratedProtocolMessageType('IpAddrPrefLenPb', (_message.Message,), {
  'DESCRIPTOR' : _IPADDRPREFLENPB,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.IpAddrPrefLenPb)
  })
_sym_db.RegisterMessage(IpAddrPrefLenPb)

IpInterfaceAddrPrefixPb = _reflection.GeneratedProtocolMessageType('IpInterfaceAddrPrefixPb', (_message.Message,), {
  'DESCRIPTOR' : _IPINTERFACEADDRPREFIXPB,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.IpInterfaceAddrPrefixPb)
  })
_sym_db.RegisterMessage(IpInterfaceAddrPrefixPb)

MacAddressPb = _reflection.GeneratedProtocolMessageType('MacAddressPb', (_message.Message,), {
  'DESCRIPTOR' : _MACADDRESSPB,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.MacAddressPb)
  })
_sym_db.RegisterMessage(MacAddressPb)

GlobalIfId = _reflection.GeneratedProtocolMessageType('GlobalIfId', (_message.Message,), {
  'DESCRIPTOR' : _GLOBALIFID,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.GlobalIfId)
  })
_sym_db.RegisterMessage(GlobalIfId)

NetInstanceId = _reflection.GeneratedProtocolMessageType('NetInstanceId', (_message.Message,), {
  'DESCRIPTOR' : _NETINSTANCEID,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.NetInstanceId)
  })
_sym_db.RegisterMessage(NetInstanceId)

PortIdPb = _reflection.GeneratedProtocolMessageType('PortIdPb', (_message.Message,), {
  'DESCRIPTOR' : _PORTIDPB,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.PortIdPb)
  })
_sym_db.RegisterMessage(PortIdPb)

MplsLabel = _reflection.GeneratedProtocolMessageType('MplsLabel', (_message.Message,), {
  'DESCRIPTOR' : _MPLSLABEL,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.MplsLabel)
  })
_sym_db.RegisterMessage(MplsLabel)

AgentReply = _reflection.GeneratedProtocolMessageType('AgentReply', (_message.Message,), {
  'DESCRIPTOR' : _AGENTREPLY,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.AgentReply)
  })
_sym_db.RegisterMessage(AgentReply)

SyncRequest = _reflection.GeneratedProtocolMessageType('SyncRequest', (_message.Message,), {
  'DESCRIPTOR' : _SYNCREQUEST,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.SyncRequest)
  })
_sym_db.RegisterMessage(SyncRequest)

SyncResponse = _reflection.GeneratedProtocolMessageType('SyncResponse', (_message.Message,), {
  'DESCRIPTOR' : _SYNCRESPONSE,
  '__module__' : 'sdk_common_pb2'
  # @@protoc_insertion_point(class_scope:srlinux.sdk.SyncResponse)
  })
_sym_db.RegisterMessage(SyncResponse)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
